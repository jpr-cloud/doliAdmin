---
- name: creaciÃ³n de /.conf con credenciales
  hosts: '{{ target}}'
  become: true
  tasks:
    - name: Creando el archivo /etc/sellyoursaas.conf
      copy:
        dest: "/etc/sellyoursaas.conf"
        content: |
          # File /etc/sellyoursaas.conf

          # Dominio del servicio
          domain= {{ domain }}

          # If deployment server: url of subdomain for user instances
          subdomain={{ subdomain }}.{{ domain }}

          # Set to 1 if this server is the master server and must still have ssh and mysql port open,
          # or 2 if the ssh and mysql access are restricted to ips into /etc/sellyoursaas.d/sellyoursaas-allowed-ip[-ssh|-mysql].conf only

          masterserver={{ 1 if scope == "master" else (2 if scope == "deploy" else 0) }}

          # Set to 1 if this server host instances for the pool (deployment server) and must have ssh and mysql port open,
          # or 2 if the ssh and mysql access are restricted to ips into /etc/sellyoursaas.d/sellyoursaas-allowed-ip[-ssh|-mysql].conf only
          instanceserver={{ 1 if scope == "deploy" else (2 if scope == "master" else 0) }}

          # Set to 1 if this server hosts a dns for the pool (deployment server)
          dnsserver=0

          # Set this to 1 or 0 to archive or not the test instances during undeployment (if 0, test are destroyed with no archive step)
          archivetestinstances=1

          # Set to its own IP if it is a deployment server. Keep empty for master only server.
          ipserverdeployment=ip.of.deployment.server

          # If deployment server: IPs allowed to request a deployment
          allowed_hosts=ip.of.master.server

          # email from
          emailfrom=noreply@jpyrsa.mx
          # email supervision
          emailsupervision=supervision@jpyrsa.mx

          # Set location of the master database, ipOfMasterServer or localhost if on master server
          databasehost= {{ database_deploySaas.host }}
          # Set port of the master database (default is 3306)
          databaseport= {{ database_deploySaas.port }}
          # Set database name of the master server
          database= {{ database_deploySaas.schema }}
          # Set a credential for an access to the master database (each server can have a different account to access the master database)
          databaseuser={{ database_deploySaas.user }}
          databasepass= {{ database_deploySaas.password }}

          # Option to use a master database on a different server than the master server
          # Set location of the deployment database (default is localhost)
          #databasehostdeployment=localhost
          # Set port of the deployment database (default is 3306)
          #databaseportdeployment=3306
          # Set credential for the deployment database (if different of master database)
          #databaseuserdeployment=sellyoursaas
          #databasepassdeployment=xxxxx

          # Set compress format (gzip or zstd) (zstd need Ubuntu >= 20 or Debian >= 10)
          usecompressformatforarchive=zstd

          # Set this to directory where dolibarr repository is installed
          dolibarrdir={{ directories.wwwroot }}/dolibarr
          # Set directory where instances are stored (default is /home/jail/home)
          targetdir={{ directories.jail }}/home

          # Set directory where backup are stored
          backupdir={{ directories.backups }}
          # Set directory where archives of tests instances are stored
          archivedirtest={{ directories.archives_test }}
          # Set directory where archives of paid instances are stored
          archivedirpaid={{ directories.archives_paid }}

          # Set option to exclude some tables for some instances in backup
          #backupignoretables=myinstance.withX.mysellyoursaasdomain.com:table1+table2,all:table3+table4,...
          # Set option to use --compression-algorithms=zstd on mysqldump command (required with mysql 8.0.18+)
          #backupcompressionalgorithms=zstd
          # Can set the frequency of rsync
          #backuprsyncdayfrequency=1
          # Can set the frequency of sql dump
          #backupdumpdayfrequency=1

          # Set remote server launcher ip (default is 0.0.0.0)
          remoteserverlistenip=0.0.0.0
          # Set remote server launcher port (default is 8080)
          remoteserverlistenport=8080

          remotebackupserver=ip.of.remote.backup.ssh.server
          remotebackupuser={{ system_users.admin }}
          remotebackupdir={{ directories.backup }}

          # Option to use different path for dataroot
          #olddoldataroot=/home/admin/wwwroot/dolibarr_documents
          #newdoldataroot=/new/path/of/documents
          # Options to change the directory of vhostfile templates
          #templatesdir=/path/of/vhostfile/templates

          # Options to change the SSL certificates names in Apache virtualhost
          #websslcertificatecrt=with.sellyoursaas.com.crt
          #websslcertificatekey=with.sellyoursaas.com.key
          #websslcertificateintermediate=with.sellyoursaas.com-intermediate.crt

          # Options for Jailkit
          #chrootdir=/home/jail/chroot
          #privatejailtemplatename=privatejail
          #commonjailtemplatename=commonjail
        owner: root
        group: '{{ system_users.admin }}'
        mode: '0730'
    - name: Creando el archivo /etc/sellyoursaas-public.conf
      copy:
        dest: "/etc/sellyoursaas-public.conf"
        content: |
          # File /etc/sellyoursaas-public.conf

          # Options for antispam system
          maxemailperday=50
          maxemailperdaypaid=500
        owner: root
        group: '{{ system_users.admin }}'
        mode: '0777'
    - name: Crear directorio
      file:
        path: '{{ directories.sellyoursaas_d }}'
        state: directory
        mode: 0755
        owner: '{{ system_users.admin }}'
        group: '{{ system_users.admin }}'
        recurse: yes
      