# =============================================================================
# INSTALACIÓN  SERVIDOR DEPLOYMENT
# ================================================================- name: "FASE 2.14: Configuración AppArmor"
  import_playbook: playbooks/deploy/apparmor_deploy.yml

- name: "FASE 2.15: Configuración Jailkit (Opcional)"
  import_playbook: playbooks/deploy/jailkit_deploy.yml

- name: "FASE 2.16: Permitir generación de PNG desde PDF"
  import_playbook: playbooks/deploy/allow_png_gen.yml=====
# Este playbook configura el o los servidores de deployment
# PREREQUISITO: El servidor master debe estar ya instalado y funcionando
# =============================================================================
---
- name: "=== INSTALACIÓN DEPLOYMENT SERVER ==="
  hosts: '{{ target }}'
  gather_facts: no
  tasks:
    - name: "Mostrar información de instalación Deployment"
      debug:
        msg:
          - "=========================================="
          - "  INSTALACIÓN SERVIDOR DEPLOYMENT"
          - "=========================================="
          - "Deploy Server: {{ deployment_server.hostname }} ({{ deployment_server.ip }})"
          - "Master Server: {{ master_server.hostname }} ({{ master_server.ip }})"
          - "Dominio Deploy: {{ deployment_server.domain }}"
          - "=========================================="

    - name: "Verificar conectividad con Master"
      ping:
        data: "test"
      delegate_to: "{{ master_server.ip }}"
      ignore_errors: yes
      register: master_connectivity

    - name: "Advertencia si no hay conectividad con Master"
      debug:
        msg:
          - "⚠️  ADVERTENCIA: No se puede conectar con el servidor Master"
          - "   Asegúrate de que el Master esté instalado y funcionando"
          - "   IP Master: {{ master_server.ip }}"
      when: master_connectivity.failed is defined and master_connectivity.failed

# =============================================================================
# CONFIGURACIÓN BÁSICA DEPLOYMENT
# =============================================================================
- name: "FASE 1: Instalación de paquetes comunes en Deploy"
  import_playbook: playbooks/shared/common_packages.yml
  vars:
    ansible_limit: deploy

# =============================================================================
# CONFIGURACIÓN ESPECÍFICA DEPLOYMENT
# =============================================================================
- name: "FASE 2.1: Configuración SSH y usuarios en Deploy"
  import_playbook: playbooks/shared/ssh_sudo.yml
  vars:
    target_hosts: deploy

- name: "FASE 2.1.1: Configuración claves SSH SellYourSaas"
  import_playbook: playbooks/shared/ssh_keys_sellyoursaas.yml
  vars:
    target_hosts: deploy

- name: "FASE 2.2: Configuración usuario myunixlogin"
  import_playbook: playbooks/deploy/myunixlogin.yml

- name: "FASE 2.3: Configuración NFS Cliente en Deploy"
  import_playbook: playbooks/shared/nfs_share.yml
  vars:
    target_hosts: deploy

- name: "FASE 2.3: Configuración PHP en Deploy"
  import_playbook: playbooks/shared/php_config.yml
  vars:
    ansible_limit: deploy

- name: "FASE 2.4: Max size increase UID - Configuración UID/GID para instancias"
  import_playbook: playbooks/shared/uid_gid_config.yml
  vars:
    target_hosts: deploy

- name: "FASE 2.4.1: Configuración Apache General en Deploy"
  import_playbook: playbooks/shared/apache_config.yml
  vars:
    target_hosts: deploy

- name: "FASE 2.4.2: Configuración Apache Deploy específico"
  import_playbook: playbooks/deploy/apache_deploy_specific.yml
  vars:
    target_hosts: deploy

- name: "FASE 2.4.3: Configuración Apache Deploy (Legacy)"
  import_playbook: playbooks/deploy/apache_deploy.yml

- name: "FASE 2.4.4: Configuración del Filesystem de Logs (Opcional)"
  import_playbook: playbooks/shared/logs_filesystem.yml
  vars:
    target_hosts: deploy

- name: "FASE 2.4.5: Configuración Timeout MariaDB"
  import_playbook: playbooks/shared/mariadb_timeout.yml
  vars:
    target_hosts: deploy

- name: "FASE 2.5: Configuración Fail2ban en Deploy"
  import_playbook: playbooks/deploy/fail2ban_deploy.yml

- name: "FASE 2.6: Configuración SSL/Certbot en Deploy"
  import_playbook: playbooks/shared/certbot.yml
  vars:
    ansible_limit: deploy

- name: "FASE 2.7: Obtención de archivos Dolibarr y SellYourSaas"
  import_playbook: playbooks/shared/dolibarr_sources.yml
  vars:
    target_hosts: deploy

- name: "FASE 2.7.1: Instalación Unix Watchdog (Opcional)"
  import_playbook: playbooks/shared/unix_watchdog.yml
  vars:
    target_hosts: deploy

- name: "FASE 2.7.2: Test SpamAssassin Configuration"
  import_playbook: playbooks/shared/test_spamassassin.yml
  vars:
    target_hosts: deploy

- name: "FASE 2.7.3: Test and Setup of ClamAV"
  import_playbook: playbooks/shared/test_clamav.yml
  vars:
    target_hosts: deploy

- name: "FASE 2.7.4: Installation of Afick"
  import_playbook: playbooks/shared/afick.yml
  vars:
    target_hosts: deploy

- name: "FASE 2.7.5: Setup of CPUlimit (Optional)"
  import_playbook: playbooks/shared/cpulimit.yml
  vars:
    target_hosts: deploy

- name: "FASE 2.7.6: Configuración Dolibarr Templates en Deploy"
  import_playbook: playbooks/deploy/dolibarr_deploy.yml

- name: "FASE 2.7.7: Creación de Directorios de Trabajo"
  import_playbook: playbooks/shared/working_directories.yml
  vars:
    target_hosts: deploy

- name: "FASE 2.7.8: Configuración de archivos SellYourSaas"
  import_playbook: playbooks/shared/sellyoursaas_config.yml
  vars:
    target_hosts: deploy

- name: "FASE 2.8: Configuración Logrotate en Deploy"
  import_playbook: playbooks/shared/logrotate.yml
  vars:
    ansible_limit: deploy

- name: "FASE 2.9: Configuración de discos y montajes"
  import_playbook: playbooks/shared/disk_management.yml

- name: "FASE 2.10: Configuración shell por defecto"
  import_playbook: playbooks/shared/default_shell.yml

- name: "FASE 2.11: Eliminación archivos información login"
  import_playbook: playbooks/shared/del_info_login.yml
  vars:
    target_hosts: deploy

- name: "FASE 2.12: Desactivación de actualizaciones automáticas"
  import_playbook: playbooks/shared/disable_auto_updates.yml
  vars:
    target_hosts: deploy

- name: "FASE 2.12: Configuración plantilla /etc/skel"
  import_playbook: playbooks/deploy/skel_template.yml

- name: "FASE 2.13: Configuración alias del sistema"
  import_playbook: playbooks/deploy/deploy_alias.yml

# NOTA: La configuración de UID máximo ahora se maneja en FASE 2.4 con playbooks/shared/uid_gid_config.yml
# - name: "FASE 2.14: Configuración UID máximo"
#  import_playbook: playbooks/deploy/increase_uid.yml

- name: "FASE 2.14: Configuración AppArmor"
  import_playbook: playbooks/deploy/apparmor_deploy.yml

- name: "FASE 2.16: Configuración Jailkit (Opcional)"
  import_playbook: playbooks/deploy/jailkit_deploy.yml

- name: "FASE 2.17: Habilitar generación PNG desde PDF"
  import_playbook: playbooks/deploy/allow_png_gen.yml

- name: "FASE 2.18: Configuración Cron específico en Deploy"
  import_playbook: playbooks/deploy/cron_deploy.yml

- name: "FASE 2.19: Configuración Cron general en Deploy"
  import_playbook: playbooks/shared/cron.yml
  vars:
    ansible_limit: deploy

- name: "FASE 2.20: Configuración AFICK en Deploy"
  import_playbook: playbooks/shared/afick.yml
  vars:
    ansible_limit: deploy

- name: "FASE 2.21: Configuración Watchdog en Deploy"
  import_playbook: playbooks/deploy/watchdog_deploy.yml

# =============================================================================
# VERIFICACIÓN DEPLOYMENT
# =============================================================================
- name: "FASE 3: Verificación instalación Deployment"
  hosts: deploy
  become: true
  gather_facts: yes
  tasks:
    - name: "Verificar servicios críticos en Deploy"
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - apache2
        - fail2ban

    - name: "Verificar acceso a directorios críticos"
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ directories.instances }}"
        - "{{ directories.backups }}"
        - "{{ directories.scripts }}"
        - "{{ directories.templates }}"
      check_mode: yes

    - name: "Verificar montaje NFS con Master"
      mount:
        path: "{{ directories.nfs_mount }}"
        src: "{{ master_server.ip }}:{{ directories.backups }}"
        fstype: nfs
        state: mounted
      register: nfs_mount_result

    - name: "Verificar conectividad con base de datos Master"
      command: >
        mysql -h{{ master_server.ip }} -u{{ database.user }} -p{{ database.password }} 
        -e "SELECT 1"
      register: db_connectivity
      changed_when: false
      failed_when: db_connectivity.rc != 0

    - name: "Mostrar resumen de instalación Deployment"
      debug:
        msg:
          - "=========================================="
          - "INSTALACIÓN DEPLOYMENT COMPLETADA"
          - "Servidor: {{ inventory_hostname }}"
          - "IP: {{ ansible_host }}"
          - "Hostname: {{ ansible_hostname }}"
          - "NFS Mount: {{ 'OK' if nfs_mount_result.changed == false else 'ERROR' }}"
          - "DB Connectivity: {{ 'OK' if db_connectivity.rc == 0 else 'ERROR' }}"
          - "=========================================="

# =============================================================================
# CONFIGURACIONES ADICIONALES COMPLETENESS
# =============================================================================
- name: "FASE 22: Políticas de contraseñas"
  import_playbook: playbooks/shared/min_password.yml
  vars:
    ansible_limit: deploy

- name: "FASE 23: Configuración antivirus y spam"
  import_playbook: playbooks/shared/spam_clam_config.yml
  vars:
    ansible_limit: deploy

- name: "FASE 24: Optimización CPU y logs"
  import_playbook: playbooks/shared/cpulimit_journalctl.yml
  vars:
    ansible_limit: deploy

- name: "FASE 25: Configuraciones específicas deployment"
  import_playbook: playbooks/deploy/deploy_specific.yml

- name: "FASE 26: Usuario personal sysadmin"
  import_playbook: playbooks/shared/personal_sysadmin.yml
  vars:
    ansible_limit: deploy

- name: "FASE 27: Script de monitoreo basic.sh"
  import_playbook: playbooks/shared/monitor_basic.yml
  vars:
    ansible_limit: deploy

- name: "FASE 28: SSL wildcard personalizado"
  import_playbook: playbooks/shared/ssl_wildcard.yml
  vars:
    ansible_limit: deploy

# =============================================================================
# INFORMACIÓN FINAL DEPLOYMENT
# =============================================================================
- name: "FASE 4: Información final Deployment"
  hosts: localhost
  gather_facts: no
  tasks:
    - name: "Mostrar información de acceso Deployment"
      debug:
        msg:
          - "================================================================"
          - "   INSTALACIÓN SERVIDOR DEPLOYMENT COMPLETADA - 100% COMPLIANCE"
          - "================================================================"
          - ""
          - "🔧 ACCESOS DEPLOYMENT:"
          - "   • SSH: ssh {{ system_users.app_admin }}@{{ deployment_server.ip }} -p {{ ssh_config.port }}"
          - "   • Instancias se crearán en: {{ directories.instances }}"
          - "   • Monitor básico: ejecutar 'basic' en consola"
          - ""
          - "📊 SERVICIOS DEPLOYMENT ACTIVOS:"
          - "   • Apache configurado para instancias múltiples"
          - "   • NFS Cliente conectado al Master"
          - "   • Monitoreo específico de instancias"
          - "   • SSL automático para nuevas instancias"
          - "   • Jailkit + AppArmor + límites de recursos"
          - "   • Fail2ban + políticas contraseñas + antivirus"
          - "   • Optimizaciones CPU/logs específicas"
          - ""
          - "🔗 CONEXIÓN CON MASTER:"
          - "   • Master IP: {{ master_server.ip }}"
          - "   • Base de datos compartida: {{ database.main_db }}"
          - "   • NFS Mount: {{ directories.nfs_mount }}"
          - ""
          - "🚀 PRÓXIMOS PASOS:"
          - "   1. Desde el panel Master, crear primera instancia de prueba"
          - "   2. Verificar que la instancia se crea en este servidor"
          - "   3. Configurar DNS wildcard para *.{{ deployment_server.domain }}"
          - "   4. Configurar certificados SSL definitivos"
          - ""
          - "📧 NOTIFICACIONES: {{ notifications.email }}"
          - "👤 SYSADMIN PERSONAL: {{ personal_sysadmin_user | default('mylastnamefirstname') }}"
          - "================================================================"
